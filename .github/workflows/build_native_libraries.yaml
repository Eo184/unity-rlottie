name: Build and Test

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: |
          cd projects/CMake
          cmake -S . -B ./build_x86 -A Win32
          cmake -S . -B ./build_x86_64 -A x64
          cmake --build ./build_x86 --config Release
          cmake --build ./build_x86_64 --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: LottiePluginWindowsArtifacts
          path: |
            out/Release/Plugins/Windows/x86/LottiePlugin.dll
            out/Release/Plugins/Windows/x86/rlottie.dll
            out/Release/Plugins/Windows/x86_64/LottiePlugin.dll
            out/Release/Plugins/Windows/x86_64/rlottie.dll

  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.25.2'

      - name: Set execution permissions for gradlew
        run: chmod +x projects/AndroidStudio/gradlew

      - name: Build Gradle project
        run: |
          echo $ANDROID_NDK_HOME
          result=$(find $ANDROID_NDK_HOME -name aarch64-linux-android-strip)
          echo $result
          cd projects/AndroidStudio
          ./gradlew assembleRelease
          echo "Ls command for app/.cxx"
          ls -R app/.cxx
          echo "Ls command for ../../out"
          ls -R ../../out
          echo "Tree command for app/.cxx"
          tree app/.cxx

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: LottiePluginAndroidArtifacts
          path: out/

  # build_macos:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: recursive

  #     - name: Install CMake
  #       run: brew install cmake

  #     - name: Build
  #       run: |
  #         cd unity-rlottie/projects/CMake
  #         cmake -S . -B ./buildOSX -G Xcode -DVORBIS_OSX=1
  #         cmake --build ./buildOSX --config Release
  #         mkdir -p ../../unity/RLottieUnity/Assets/LottiePlugin/Plugins/OSX
  #         mv VorbisPluginBuild/RLottiePlugin.dylib ../../unity/RLottieUnity/Assets/LottiePlugin/Plugins/OSX

  # build_ios:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: recursive

  #     - name: Install CMake
  #       run: brew install cmake

  #     - name: Build
  #       run: |
  #         cd unity-rlottie/projects/CMake
  #         cmake -S . -B ./buildIOS -G Xcode -DCMAKE_TOOLCHAIN_FILE=../../dependency/cmake-ios-toolchain/ios.toolchain.cmake -DPLATFORM=OS64 -DVORBIS_IOS=1
  #         cmake --build ./buildIOS --config Release --target RLottiePlugin
  #         mkdir -p ../../unity/RLottieUnity/Assets/LottiePlugin/Plugins/iOS
  #         mv VorbisPluginBuild/RLottiePlugin.a ../../unity/RLottieUnity/Assets/LottiePlugin/Plugins/iOS
